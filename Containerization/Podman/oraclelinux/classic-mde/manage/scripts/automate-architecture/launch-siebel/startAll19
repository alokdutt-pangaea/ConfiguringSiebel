#!/bin/bash

source ./${2}

set -x
if   ! [ -d $PV/$ENTERPRISE1/CGW ] || ! [ -d $PV/$ENTERPRISE1/SES ]  || ! [ -d $PV/$ENTERPRISE1/SAI ] || ! [ -d $PV/$ENTERPRISE1/SFS ]
then
   echo "One of the required persistent folders CGW, SES, SAI or SFS is missing! "
   exit
fi

getContainerHealth() {
  podman healthcheck run "$1" >/dev/null 2>&1
  sleep 5
  podman inspect --format '{{json .State.Health.Status}}' "$1"
}

waitContainer() {
  # Conditional initial wait time
  if [ "$1" == "$DBHOST" ]; then
    echo "Waiting 20 minutes for oracle19c to settle..."
    sleep 1200
  else
    echo "Waiting 1 minute for $1 to settle..."
    sleep 60
  fi

  # Health check loop
  while true; do
    STATUS=$(getContainerHealth "$1")
    if [ "$STATUS" == "\"healthy\"" ]; then
      break
    elif [ "$STATUS" == "\"unhealthy\"" ]; then
      echo "Failed!"
      exit 1
    fi
    printf "."
    sleep 1
  done

  printf "\n"
}

date

#Check if Oracle DB container is running
if ! podman ps --format '{{.Names}}' | grep -q "^${DBHOST}$"; then
    echo "Starting DB"
    set -x
    bash "${ROOT}/generic/container/startOracle19" -v "${PV}/ORCL19" -w "${DOCKERNET}"
    set +x
    waitContainer "${DBHOST}"
else
    echo "Container '${DBHOST}' is already running — skipping DB start"
    date
fi

#Start sai-${ENTERPRISE1} if not already running
echo "Starting sai-${ENTERPRISE1}"

if ! podman ps --format '{{.Names}}' | grep -q "^sai-${ENTERPRISE1}$"; then
    set -x
    bash "${ROOT}/generic/container/startSAI" \
        -n "sai-${ENTERPRISE1}" \
        -v "${PV}/${ENTERPRISE1}/SAI" \
        -s "${PV}/${ENTERPRISE1}/SFS" \
        -p "${PORT}" \
        -r "$1" \
        -c "${CONTAINERBASE}" \
        -o "${DOMAIN}" \
        -w "${DOCKERNET}" \
        -u "${RUNASUSER}"
    set +x
    waitContainer "sai-${ENTERPRISE1}"
else
    echo "Container 'sai-${ENTERPRISE1}' is already running — skipping start"
    date
fi

#Start cgw-${ENTERPRISE1} if not already running
echo "Starting cgw-${ENTERPRISE1}"

if ! podman ps --format '{{.Names}}' | grep -q "^cgw-${ENTERPRISE1}$"; then
    set -x
    bash "${ROOT}/generic/container/startCGW" \
        -n "cgw-${ENTERPRISE1}" \
        -v "${PV}/${ENTERPRISE1}/CGW" \
        -s "${PV}/${ENTERPRISE1}/SFS" \
        -d "${TNSCONN}" \
        -e "${DBHOST}" \
        -f "${DBPORT}" \
        -g "${DBINST}" \
        -r "$1" \
        -c "${CONTAINERBASE}" \
        -o "${DOMAIN}" \
        -w "${DOCKERNET}" \
        -u "${RUNASUSER}"
    set +x
    waitContainer "cgw-${ENTERPRISE1}"
else
    echo "Container 'cgw-${ENTERPRISE1}' is already running skipping CGW start"
    date
fi

#Start ses-${ENTERPRISE1} if not already running
echo "Starting ses-${ENTERPRISE1}"
echo

if ! podman ps --format '{{.Names}}' | grep -q "^ses-${ENTERPRISE1}$"; then
    set -x
    bash "${ROOT}/generic/container/startSES" \
        -n "ses-${ENTERPRISE1}" \
        -v "${PV}/${ENTERPRISE1}/SES" \
        -s "${PV}/${ENTERPRISE1}/SFS" \
        -d "${TNSCONN}" \
        -e "${DBHOST}" \
        -f "${DBPORT}" \
        -g "${DBINST}" \
        -r "$1" \
        -c "${CONTAINERBASE}" \
        -o "${DOMAIN}" \
        -w "${DOCKERNET}" \
        -u "${RUNASUSER}" \
        -z "${SES1SERVERNAME}"
    set +x
    waitContainer "ses-${ENTERPRISE1}"
else
    echo "Container 'ses-${ENTERPRISE1}' is already running skipping SES start"
    date
fi

podman ps
date
echo "Start up complete."
